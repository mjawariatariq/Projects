
# from django.db import models
# from django.contrib.auth.models import User

# class Room(models.Model):
#     name = models.CharField(max_length=255, unique=True)

#     def __str__(self):
#         return self.name  # This makes it easier to identify rooms in Django admin or shell

# class Message(models.Model):
#     room = models.ForeignKey(Room, on_delete=models.CASCADE)
#     user = models.ForeignKey(User, on_delete=models.CASCADE)
#     content = models.TextField()
#     timestamp = models.DateTimeField(auto_now_add=True)

#     def __str__(self):
#         return f"{self.user.username}: {self.content[:50]}"  # Display user and content preview in the admin or shell

from django.db import models
from django.contrib.auth.models import User
from django.contrib.auth.models import User

# Models
class Room(models.Model):
    name = models.CharField(max_length=255, unique=True)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "Chat Room"
        verbose_name_plural = "Chat Rooms"

class Message(models.Model):
    room = models.ForeignKey(Room, on_delete=models.CASCADE, related_name="messages")
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="messages")
    content = models.TextField(null=True, blank=True)
    media = models.FileField(upload_to='chat_media/', null=True, blank=True)
    timestamp = models.DateTimeField(auto_now_add=True)
    status = models.CharField(
        max_length=20,
        choices=[("sent", "Sent"), ("delivered", "Delivered"), ("read", "Read")],
        default="sent",
    )

    def __str__(self):
        return f"{self.user.username}: {self.content[:50]}" if self.content else "Media Message"

    class Meta:
        ordering = ['timestamp']
        verbose_name = "Chat Message"
        verbose_name_plural = "Chat Messages"

# Add an 'is_online' field to the User model
User.add_to_class('is_online', models.BooleanField(default=False))
