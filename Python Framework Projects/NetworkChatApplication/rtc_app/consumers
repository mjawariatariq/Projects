import json
from channels.generic.websocket import AsyncWebsocketConsumer

class ChatConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        self.roomGroupName = "group_chat_gfg"
        print(f"Connecting to group: {self.roomGroupName}")

        # Add the WebSocket connection to the group
        await self.channel_layer.group_add(
            self.roomGroupName,
            self.channel_name
        )

        await self.accept()

async def disconnect(self, close_code):
    print(f"WebSocket disconnected with close code: {close_code}")
    await self.channel_layer.group_discard(
        self.roomGroupName,
        self.channel_name
    )

    async def receive(self, text_data):
        try:
            text_data_json = json.loads(text_data)
            message = text_data_json.get("message")
            username = text_data_json.get("username")

            print(f"Received message: {message} from {username}")

            # Send the message to the group
            await self.channel_layer.group_send(
                self.roomGroupName,
                {
                    "type": "send_message",
                    "message": message,
                    "username": username,
                }
            )
        except Exception as e:
            print(f"Error in receive: {e}")

    async def send_message(self, event):
        message = event["message"]
        username = event["username"]

        # Send the message to WebSocket
        await self.send(
            text_data=json.dumps({"message": message, "username": username})
        )
